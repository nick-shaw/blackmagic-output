name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: Build on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # TEMPORARY: Only testing Windows while debugging build issues
        os: [windows-latest]
        python-version: ['3.11']
        # os: [ubuntu-latest, macos-latest, windows-latest]
        # python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
        # exclude:
        #   # Python 3.13 may not be available on all runners yet
        #   - os: windows-latest
        #     python-version: '3.13'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Install package
        shell: bash
        run: |
          # Find the wheel file and install it
          wheel_file=$(ls dist/*.whl | head -n 1)
          pip install "$wheel_file"

      - name: Test import
        run: |
          python -c "import blackmagic_output; print(f'Successfully imported version {blackmagic_output.__version__}')"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/
          retention-days: 7
